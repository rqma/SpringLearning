<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--1.创建目标类-->
    <bean id="userServiceId" class="com.adi.b_factory_bean.UserServiceImpl"></bean>

    <!--创建切面类-->
    <bean id="myAspectId" class="com.adi.b_factory_bean.MyAspect"></bean>

    <!--3.创建代理类
      使用工厂bean FactoryBean,底层调用getObject() 返回特殊bean
      ProxyFactoryBean：用于创建工厂bean ,生成特殊代理对象
      interfaces :确定接口
      通过<array> </array>可设置多个值，只有一个值时，直接使用<value></value>
      target :确定目标类
      interceptorNames :通知切面类的名称， 通过<array> </array>可设置多个值，只有一个值时，直接使用<value></value>

      optimize：强制使用cglib
         <property name="optimize" value="true"> </property>
      底层机制：
         如果目标类有接口，采用jdk动态代理
         如果没有，采用cglib
         如果声明optimize=true,无论是否有接口，都采用cglib

    -->
    <bean id="proxyServiceId" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="interfaces" value="com.adi.b_factory_bean.UserService"> </property>
        <property name="target" ref="userServiceId"> </property>
        <property name="interceptorNames" value="myAspectId"> </property>
        <property name="optimize" value="true"> </property>
    </bean>

</beans>