<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd"
>

    <!--1.创建目标类-->
    <bean id="userServiceId" class="com.adi.c_spring_aop.UserServiceImpl"></bean>

    <!--创建切面类-->
    <bean id="myAspectId" class="com.adi.c_spring_aop.MyAspect"></bean>

    <!--3.AOP编程
       3.1导入命名空间
       3.2使用<aop:config>配置
        <aop:aspect>
        <aop:pointcut> 切入点，从目标对象获得具体方法
        <aop:advisor>特殊的切面，只有一个切点和一个通知
          advice-ref  通知引用
          pointcut-ref 切入点引用
        proxy-target-class="true"  强制使用cglib
          <aop:config  proxy-target-class="true">
        底层机制：
         1.如果目标类有接口，采用jdk动态代理
         2.如果没有，采用cglib
         3.如果声明proxy-target-class,无论是否有接口，都采用cglib
        注意:
           l1: UserService userService=(UserService)applicationContext.getBean("userServiceId");
           l2: UserServiceImpl userService=(UserServiceImpl)applicationContext.getBean("userServiceId");
          1.没有配置 proxy-target-class="true"，
            a.有接口时
              l1正确, l2错误
            b.没有接口时
              l1不存在, l2正确
          2.有配置 proxy-target-class="true"
             不论是否有接口，l1,l2均正确
    -->
    <aop:config  proxy-target-class="true">
        <aop:pointcut id="mypointcut" expression="execution(* com.adi.c_spring_aop.UserServiceImpl.*(..))"/>
        <aop:advisor advice-ref="myAspectId" pointcut-ref="mypointcut"/>
    </aop:config>

</beans>